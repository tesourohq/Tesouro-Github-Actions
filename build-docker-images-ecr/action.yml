name: Build docker images ecr
description: Build docker images ecr
inputs:
  sem-ver:
    description: Version of the package
    required: true
  AssemblySemVer:
    description: Version of the Assembly
    required: true
  gh-packages-token:
    description: Github packages token
    required: true
  dockerfile-path:
    description: The location of the project Dockerfile
    required: true
  image-name:
    description: Base image name to store in ECR
    required: true
  aws-github-role:
    description: AWS role to assume
    required: true
  aws-region:
    description: AWS region ECR repository is in.
    required: true
  aws-repository-name:
    description: AWS ECR repository name.
    required: true
  gcloud-service-account:
    description: Google Cloud service account
    required: true
  docker-context:
    description: The context folder where the image is built
    required: true
  platform:
    description: The platform to target for the build
    default: linux/arm64
  dockerhub-username:
    description: The Dockerhub username for the account that will pull third party images.
    required: true
  dockerhub-access-token:
    description: The PAT for the Dockerhub account.
outputs:
  image-tag:
    description: The tag (other than 'latest') applied to the image and pushed.
    value: ${{ inputs.sem-ver }}
  image-name:
    description: The full name of the image that was built and pushed.
    value: gcr.io/tesouro-cloud/${{ inputs.image-name }}${{ github.event_name == 'pull_request' && '-ci' || '' }}:${{ inputs.sem-ver }}
runs:
  using: composite
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.dockerhub-username }}
        password: ${{ inputs.dockerhub-access-token }}

    - name: Authorize with GCloud
      id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        token_format: access_token
        workload_identity_provider: projects/274784588410/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-oidc-provider
        service_account: ${{ inputs.gcloud-service-account }}

    - name: Login to GCR
      uses: docker/login-action@v2
      with:
        registry: gcr.io
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.aws-github-role }}
        aws-region: ${{ inputs.aws-region }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.docker-context }}
        platforms: linux/arm64
        push: true
        file: ${{ inputs.dockerfile-path }}/Dockerfile
        build-args: |
          ASSEMBLY_VERSION=${{ inputs.AssemblySemVer }}
          GH_PACKAGES_TOKEN=${{ inputs.gh-packages-token }}
        tags: |
          ${{ steps.login-ecr.outputs.registry }}/${{ inputs.aws-repository-name }}/${{ inputs.image-name }}${{ github.event_name == 'pull_request' && '-ci' || '' }}:latest
          ${{ steps.login-ecr.outputs.registry }}/${{ inputs.aws-repository-name }}/${{ inputs.image-name }}${{ github.event_name == 'pull_request' && '-ci' || '' }}:${{ inputs.sem-ver }}
          gcr.io/tesouro-cloud/${{ inputs.image-name }}${{ github.event_name == 'pull_request' && '-ci' || '' }}:latest
          gcr.io/tesouro-cloud/${{ inputs.image-name }}${{ github.event_name == 'pull_request' && '-ci' || '' }}:${{ inputs.sem-ver }}      