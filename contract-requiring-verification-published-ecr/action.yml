name: Verify Contract
description: Run provider verification for a pact
inputs:
  image-name:
    description: Base image name to store in ECR
    required: true
  pact-broker-token:
    description: Read/Write token that can be used to deploy/verify pacts at tesouro.pactflow.io
    required: false
  dockerhub-username:
    description: The Dockerhub username for the account that will pull third party images.
    required: true
  dockerhub-access-token:
    description: The PAT for the Dockerhub account.
  pact-url:
    description: The "permalink" URL to the newly published pact (the URL specifying the consumer version URL, rather than the "/latest" format.
    required: true
  provider-version_number:
    description: The provider version number for the verification result
    required: true
  provider-branch:
    description: The repository branch associated with the provider version
    required: true
  gh-packages-token:
    description: Github packages token
    required: false
  aws-github-role:
    description: AWS role to assume
    required: true
  aws-region:
    description: AWS region ECR repository is in.
    required: true
  aws-repository-name:
    description: AWS ECR repository name.
    required: true
  jobs-image:
    description: Image for the jobs container for the service.
    required: false
runs:
  using: composite
  steps:
    - name: Install Docker Compose
      shell: bash
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.28.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
    
    - name: Configure AWS credentials
      uses: tesourohq/Tesouro-Github-Actions/common-actions/configure-aws-credentials@main
      with:
        role-to-assume: ${{ inputs.aws-github-role }}
        aws-region: ${{ inputs.aws-region }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: tesourohq/Tesouro-Github-Actions/common-actions/amazon-ecr-login@main

    - name: Login to Dockerhub
      uses: tesourohq/Tesouro-Github-Actions/common-actions/login-action@main
      with:
        username: ${{ inputs.dockerhub-username }}
        password: ${{ inputs.dockerhub-access-token }}

    # Here, we spin up the container detached. We used to use --exit-code-from, but exit once a specific container was done, but that
    # was recently changed to exit when ANY container was done so in case we have startup or setup containers, we'll do this in a
    # detached fashion :-)
    - name: Start Provider Verification Tests
      working-directory: ./test
      env:
        UNDERTEST_IMAGE: "${{ steps.login-ecr.outputs.registry }}/${{ inputs.aws-repository-name }}/${{ inputs.image-name }}:latest"
        PACT_BROKER_TOKEN: ${{ inputs.pact-broker-token }}
        PROVIDER_APP_VERSION: ${{ inputs.provider-version_number }}
        GIT_BRANCH: ${{ github.ref_name }}
        PACT_URL: ${{ inputs.pact-url }}
        GH_PACKAGES_TOKEN: ${{ inputs.gh-packages-token }}
        JOBS_IMAGE: ${{ inputs.jobs-image }}
      shell: bash
      run: |
        # Build pact verification container and associated services
        export CLOUDSDK_PYTHON=python2
        docker-compose -f docker-compose.ci.yml -f docker-compose.ci.verify-webhook.yml -p test_${{ github.job }} up pact-verifier --build --force-recreate -d

    # Here, we ask docker to wait until the Pact Verifier container is done running
    - name: Wait on Pact Verification
      shell: bash
      if: ${{ inputs.pact-broker-token }}
      run: docker wait test_${{ github.job }}-pact-verifier-1

    - name: Print Docker Logs
      shell: bash
      if: always()
      run: docker compose -p test_${{ github.job }} logs -t > pact_verification_logs.txt

    - name: Archive the Docker Logs
      uses: tesourohq/Tesouro-Github-Actions/common-actions/upload-artifact@main
      if: always()
      with:
        name: pact_verification_logs
        path: pact_verification_logs.txt

    # should anything go wrong, we always want to nuke the containers and all orphans (startup containers)
    - name: Shut Down Containers
      if: always()
      working-directory: ./test
      shell: bash
      run: docker-compose -f  docker-compose.ci.yml -p test_${{ github.job }} down --remove-orphans --rmi all --volumes

    - name: File List
      uses: the-coding-turtle/ga-file-list@v0.4.1
      with:
        file_extension: "xml"        
  
    - name: Report Pact Provider Results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Pact Provider Verification
        path: test/tests/bin/pact/*.xml
        reporter: java-junit
