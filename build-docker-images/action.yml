name: Build docker images
description: Build docker images
inputs:
  sem-ver:
    description: Version of the package
    required: true
  AssemblySemVer:
    description: Version of the Assembly
    required: true
  gh-packages-token:
    description: Github packages token
    required: true
  dockerfile-path:
    description: The location of the project Dockerfile
    required: true
  image-name:
    description: Base image name to store in GCR
    required: true
  gcloud-service-account:
    description: Google Cloud service account
    required: true
  docker-context:
    description: The context folder where the image is built
    required: true
  platform:
    description: The platform to target for the build
    default: linux/arm64
outputs:
  image-tag:
    description: The tag (other than 'latest') applied to the image and pushed.
    value: ${{ github.event_name == 'pull_request' && '-ci' || '' }}:${{ inputs.sem-ver }} # These two values should match exactly what is used in the --tag call below.
  image-name:
    description: The full name of the image that was built and pushed.
    value: gcr.io/tesouro-cloud/${{ inputs.image-name }}${{ github.event_name == 'pull_request' && '-ci' || '' }}:${{ inputs.sem-ver }}
runs:
  using: composite
  steps:
    - name: Authorize with GCloud
      id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        token_format: access_token
        workload_identity_provider: projects/274784588410/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-oidc-provider
        service_account: ${{ inputs.gcloud-service-account }}
    
    - name: Login to GCR
      uses: docker/login-action@v2
      with:
        registry: gcr.io
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    # a note here, the actions docker/metadata-action & docker/build-push-action were not built with building on arm architecture in mind. The environment
    # file used specifies specific linux/amd64 items making building the container impossible (for now)
    # we'll run our own command for now, but as GitHub Actions releases arm runners (and actions add support), we could switch back
    - name: Build Arm Image
      shell: bash
      run: docker buildx build ${{ inputs.docker-context }} -f ${{ inputs.dockerfile-path }}/Dockerfile --build-arg GH_PACKAGES_TOKEN=${{ inputs.gh-packages-token }} --build-arg ASSEMBLY_VERSION=${{ inputs.AssemblySemVer }} --tag gcr.io/tesouro-cloud/${{ inputs.image-name }}${{ github.event_name == 'pull_request' && '-ci' || '' }}:${{ inputs.sem-ver }} --tag gcr.io/tesouro-cloud/${{ inputs.image-name }}${{ github.event_name == 'pull_request' && '-ci' || '' }}:latest --push --platform ${{ inputs.platform }}