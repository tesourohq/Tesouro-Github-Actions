name: Build docker images
description: Build docker images
inputs:
  sem-ver:
    description: Version of the package
    required: true
  AssemblySemVer:
    description: Version of the Assembly
    required: true
  gh-packages-token:
    description: Github packages token
    required: true
  dockerfile-path:
    description: The location of the project Dockerfile
    required: true
  image-name:
    description: Base image name to store in GCR
    required: true
  gcloud-service-account:
    description: Google Cloud service account
    required: true
  docker-context:
    description: The context folder where the image is built
    required: true
  platform:
    description: The platform to target for the build
    default: linux/amd64
runs:
  using: composite
  steps:
    - name: Authorize with GCloud
      id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        token_format: access_token
        workload_identity_provider: projects/274784588410/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-oidc-provider
        service_account: ${{ inputs.gcloud-service-account }}
    
    - name: Login to GCR
      uses: docker/login-action@v2
      with:
        registry: gcr.io
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}
    
    - name: Set up GCloud SDK
      uses: 'google-github-actions/setup-gcloud@v0'
    
    - name: Configure GCloud for Docker
      shell: bash
      run: gcloud auth configure-docker -q
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Docker Meta
      id: docker_meta_pr
      env:
        GCR_REGISTRY: gcr.io/tesouro-cloud
        CONTAINER_NAME: "${{ inputs.image-name }}${{ github.event_name == 'pull_request' && '-ci' || '' }}"
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.GCR_REGISTRY }}/${{ env.CONTAINER_NAME }}
        tags: |
          # version from sem-ver
          ${{ inputs.sem-ver }}
          # push latest if we're pushing main
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Docker Build and Push
      uses: docker/build-push-action@v3
      with:
        context: ${{ inputs.docker-context }}
        file: ${{ inputs.dockerfile-path }}/Dockerfile
        platforms: ${{ inputs.platform }}
        push: true
        tags: ${{ steps.docker_meta_pr.outputs.tags }}
        build-args: |
          GH_PACKAGES_TOKEN=${{ inputs.gh-packages-token }}
          ASSEMBLY_VERSION=${{ inputs.AssemblySemVer }}
